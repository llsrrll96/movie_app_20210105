{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","idx","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTA2CeA,MAtCf,YAA0D,IAA1CC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OAGI,aAFA,CAEC,IAAD,CAAMC,GACF,CACIC,SAAS,UAAD,OAAWP,GACnBQ,MAAM,CACFP,OAAKC,QAAMC,UAAQC,SAAQC,WAJvC,SAQA,sBAAKI,UAAY,QAAjB,UACI,qBAAKC,IAAON,EAAQO,IAAKT,EAAOA,MAAOA,IACvC,sBAAKO,UAAY,cAAjB,UACI,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SACKJ,EAAOO,KAAK,SAACC,EAAMC,GAAP,OACT,oBAAgBL,UAAY,eAA5B,SAA4CI,GAAjCC,QAGnB,mBAAGL,UAAW,iBAAd,SAAgCN,aCkCjCY,G,kNAtDbP,MAAQ,CACNQ,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAE8BC,IAAMC,IAAI,4DAFxC,gBAEYJ,EAFZ,EAEHK,KAAQA,KAAOL,OAGtB,EAAKM,SAAS,CAACN,SAASD,WAAY,IAL1B,2C,kEAUbQ,KAAKN,c,+BAKJ,MAE0BM,KAAKhB,MAAzBQ,EAFN,EAEMA,UAAUC,EAFhB,EAEgBA,OACjB,OACE,yBAASR,UAAW,YAApB,SACMO,EAAa,qBAAKP,UAAU,SAAf,SACE,sBAAMA,UAAW,eAAjB,4BAGZ,qBAAKA,UAAU,SAAf,SACKQ,EAAOL,KAAI,SAAAa,GAAK,OAEb,cAAC,EAAD,CAEAzB,GAAKyB,EAAMzB,GACXC,KAAQwB,EAAMxB,KACdC,MAASuB,EAAMvB,MACfC,QAAUsB,EAAMtB,QAChBC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANPoB,EAAMzB,a,mGAnCd2B,IAAMC,YCCVC,MAJf,WACI,OAAO,uDCuBIC,E,kLAlBS,IAAD,EACaN,KAAKO,MAA1BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASxB,OACRyB,EAAQE,KAAK,O,+BAGb,IAEGH,EAAYR,KAAKO,MAAjBC,SACP,OAAGA,EAASxB,MACD,sBAAMC,UAAU,eAAhB,SAAgCuB,EAASxB,MAAMN,QAE/C,S,GAdEyB,IAAMC,WCMZQ,MATf,WACI,OACI,sBAAK3B,UAAW,MAAhB,UACI,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCYG+B,MAZf,WACI,OAGI,cAFA,CAEC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAYzB,IACzC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAYX,IACjC,cAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,QCXhDW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ebf03872.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n    return (\r\n        //Link를 통해 state에 데이터를 실어 담을 수 있다.\r\n        //a href = Link 가 눌려지면 App 에서 라우팅된다.\r\n        <Link to={\r\n            {\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year,title,summary,poster, genres\r\n                }\r\n            }\r\n        }>\r\n        <div className = \"movie\">\r\n            <img src = {poster} alt={title} title={title}/>\r\n            <div className = \"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map( (genre,idx) =>(\r\n                        <li key = {idx} className = \"genres_genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className =\"movie__summary\">{summary}</p>\r\n\r\n            </div>\r\n        </div>\r\n    </Link>\r\n);\r\n}\r\n\r\nMovie.propTypes={\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component\r\n{\r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  };\r\n\r\n  getMovies = async() =>{\r\n      //es6형식\r\n    const {data : {data :{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    //data -> data -> movies\r\n    //state 내 상태 변수 설정\r\n    this.setState({movies , isLoading : false});\r\n  };\r\n  //생성될때 호출\r\n  componentDidMount()\r\n  {\r\n\tthis.getMovies();                   \r\n  }\r\n\r\n  //값 가져 오는 부분\r\n  render()\r\n  {\r\n\t//{}내에 들어갈 변수 초기화 , this.state.isLoading\r\n\tconst {isLoading,movies} = this.state;\r\n\treturn(\r\n\t  <section className =\"container\">\r\n        {isLoading ? (<div className=\"loader\">\r\n                        <span className =\"loader__text\">Loading ... </span>\r\n                    </div>) \r\n        : (\r\n            <div className=\"movies\">\r\n                {movies.map(movie =>\r\n                    (\r\n                    <Movie \r\n                    key = {movie.id}\r\n                    id ={movie.id}\r\n                    year = {movie.year}\r\n                    title = {movie.title}\r\n                    summary= {movie.summary}\r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                    />\r\n                    )\r\n                )}\r\n            </div>\r\n        )}\r\n\t  </section>\r\n\t);\r\n  }\r\n  //렌더 이후\r\n  componentDidUpdate(){}\r\n  //끝날때\r\n  componentWillUnmount(){}\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About(){\r\n    return <span>this is About page</span>;\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\n//클릭했을때 가도록 설정한다.\r\n//영화의 세부 내역을 보여둔다.\r\n//json 데이터 : location/state/영화정보\r\n\r\nclass Detail extends React.Component\r\n{\r\n    componentDidMount(){\r\n        const {location, history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render(){\r\n        //state 존재하는지\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span className=\"detail_title\">{location.state.title}</span>;\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n        <div className =\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport {HashRouter,Route} from \"react-router-dom\"; //여러 라우터들이 있다.\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\"\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n    return (\n        //exact : 유일한 경로 하나\n        //Navigation 내의 Link를 쓰기위해서는 Router 내에 선언\n        <HashRouter>\n            <Navigation /> \n            <Route path=\"/\" exact={true} component ={Home}/>\n            <Route path=\"/about\" component ={About}/>\n            <Route path=\"/movie/:id\" component={Detail}/>\n        </HashRouter>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}